{"version":3,"file":"main.deac6173af15d35c52a0.bundle.js","sources":["webpack:///./src/proptypes.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\n// Redux\nexport const initializeOptionsPropType = PropTypes.func.isRequired;\nexport const initializeCustomComponentsPropType = PropTypes.func.isRequired;\nexport const updateComponentSizePropType = PropTypes.func.isRequired;\nexport const sortColumnsPropType = PropTypes.func.isRequired;\nexport const setPagePagePropType = PropTypes.func.isRequired;\nexport const setRowsPerPagePropType = PropTypes.func.isRequired;\nexport const setRowEditedPropType = PropTypes.func.isRequired;\nexport const addRowEditedPropType = PropTypes.func.isRequired;\nexport const revertRowEditedPropType = PropTypes.func.isRequired;\nexport const saveRowEditedPropType = PropTypes.func.isRequired;\nexport const deleteRowPropType = PropTypes.func.isRequired;\nexport const setIsScrollingPropType = PropTypes.func.isRequired;\nexport const selectRowPropType = PropTypes.func.isRequired;\nexport const setRowsSelectedPropType = PropTypes.func.isRequired;\nexport const setColumnVisibiltyPropType = PropTypes.func.isRequired;\nexport const searchPropType = PropTypes.func.isRequired;\nexport const toggleSnackbarPropType = PropTypes.func.isRequired;\nexport const setUserConfigurationPropType = PropTypes.func.isRequired;\nexport const enqueueSnackbarPropType = PropTypes.func.isRequired;\nexport const refreshRowsUserPropType = PropTypes.func.isRequired;\nexport const refreshRowsPropType = PropTypes.func;\nexport const orderByColumnsPropType = PropTypes.func.isRequired;\nexport const isScrollingPropType = PropTypes.bool;\nexport const canDeletePropType = PropTypes.bool;\nexport const checkedPropType = PropTypes.bool;\nexport const orderByPropType = PropTypes.object;\nexport const isRefreshingPropType = PropTypes.bool;\nexport const searchTermPropType = PropTypes.string;\nexport const rowsEditedPropType = PropTypes.arrayOf(PropTypes.object);\nexport const rowsSelectedPropType = PropTypes.arrayOf(PropTypes.object);\nexport const maskPropType = PropTypes.array;\n\nexport const cellValPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.bool\n]);\n\nexport const classesPropType = PropTypes.object;\n\n// Input propTypes\nexport const typePropType = PropTypes.string;\nexport const rowIdPropType = PropTypes.string;\nexport const columnIdPropType = PropTypes.string;\nexport const editingPropType = PropTypes.bool;\n\n// Pagination propTypes\nexport const pageSelectedPropType = PropTypes.number;\nexport const pageTotalPropType = PropTypes.number;\nexport const rowsPerPageSelectedPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number\n]);\nexport const rowsCurrentPagePropType = PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n);\nexport const paginationPropType = PropTypes.shape({\n  pageSelected: pageSelectedPropType,\n  pageTotal: pageTotalPropType,\n  rowsPerPageSelected: rowsPerPageSelectedPropType,\n  rowsCurrentPage: rowsCurrentPagePropType\n});\n\n// Options propTypes\nexport const actionsPropType = PropTypes.func;\nexport const forceRerenderPropType = PropTypes.bool;\nexport const titlePropType = PropTypes.string;\nexport const widthPropType = PropTypes.string;\nexport const widthNumberPropType = PropTypes.number;\nexport const heightPropType = PropTypes.string;\nexport const heightNumberPropType = PropTypes.number;\nexport const columnSizeMultiplierPropType = PropTypes.number;\nexport const stylePropType = PropTypes.object;\nexport const keyColumnPropType = PropTypes.string;\nexport const fontPropType = PropTypes.string;\nexport const idPropType = PropTypes.string;\nexport const labelPropType = PropTypes.string;\nexport const colSizePropType = PropTypes.string;\nexport const editablePropType = PropTypes.bool;\nexport const dataTypePropType = PropTypes.string;\nexport const inputTypePropType = PropTypes.string;\nexport const dateFormatPropType = PropTypes.string;\nexport const valuesPropType = PropTypes.array;\nexport const requiredPropType = PropTypes.bool;\nexport const valueVerificationPropType = PropTypes.func;\nexport const rowPropType = PropTypes.object;\nexport const rowsPropType = PropTypes.arrayOf(rowPropType);\nexport const canEditPropType = PropTypes.bool;\nexport const canPrintPropType = PropTypes.bool;\nexport const canDownloadPropType = PropTypes.bool;\nexport const canSearchPropType = PropTypes.bool;\nexport const canRefreshRowsPropType = PropTypes.bool;\nexport const canOrderColumnsPropType = PropTypes.bool;\nexport const canSelectRowPropType = PropTypes.bool;\nexport const canSaveUserConfigurationPropType = PropTypes.bool;\nexport const columnsOrderPropType = PropTypes.arrayOf(PropTypes.string);\nexport const copyToClipboardPropType = PropTypes.bool;\nexport const availablePropType = PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n);\nexport const selectedPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number\n]);\nexport const rowsSelectablePropType = PropTypes.bool;\nexport const selectPageRowsPropType = PropTypes.bool;\nexport const selectAllRowsPropType = PropTypes.bool;\nexport const tooltipPropType = PropTypes.string;\nexport const iconPropType = PropTypes.element;\nexport const onClickPropType = PropTypes.func;\nexport const headOfTheTablePropType = PropTypes.element;\nexport const bodyOfTheTablePropType = PropTypes.element;\n\nexport const datatablePropType = PropTypes.shape({\n  width: widthPropType.isRequired,\n  widthNumber: widthNumberPropType\n});\n\nexport const headerPropType = PropTypes.shape({\n  height: heightPropType.isRequired,\n  heightNumber: heightNumberPropType\n});\n\nexport const bodyPropType = PropTypes.shape({\n  height: heightPropType.isRequired,\n  heightNumber: heightNumberPropType\n});\n\nexport const rowDimensionPropType = PropTypes.shape({\n  height: heightPropType.isRequired,\n  heightNumber: heightNumberPropType\n});\n\nexport const dimensionsPropType = PropTypes.shape({\n  datatable: datatablePropType,\n  header: headerPropType,\n  body: bodyPropType,\n  row: rowDimensionPropType,\n  columnSizeMultiplier: columnSizeMultiplierPropType\n});\n\nexport const columnPropType = PropTypes.shape({\n  id: idPropType.isRequired,\n  label: labelPropType.isRequired,\n  colSize: colSizePropType,\n  editable: editablePropType,\n  dataType: dataTypePropType,\n  inputType: inputTypePropType,\n  dateFormat: dateFormatPropType,\n  values: valuesPropType,\n  required: requiredPropType,\n  valueVerification: valueVerificationPropType\n});\n\nexport const columnsPropType = PropTypes.arrayOf(columnPropType);\n\nexport const dataPropType = PropTypes.shape({\n  columns: columnsPropType,\n  rows: rowsPropType\n});\n\nexport const userConfigurationPropType = PropTypes.shape({\n  columnsOrder: columnsOrderPropType,\n  copyToClipboard: copyToClipboardPropType\n});\n\nexport const rowsPerPagePropType = PropTypes.shape({\n  available: availablePropType,\n  selected: selectedPropType\n});\n\nexport const additionalIconsPropType = PropTypes.arrayOf(\n  PropTypes.shape({\n    tooltip: tooltipPropType,\n    icon: iconPropType.isRequired,\n    onClick: onClickPropType.isRequired\n  })\n);\n\nexport const selectionIconsPropType = PropTypes.arrayOf(\n  PropTypes.shape({\n    tooltip: tooltipPropType,\n    icon: iconPropType.isRequired,\n    onClick: onClickPropType.isRequired\n  })\n);\n\nexport const featuresPropType = PropTypes.shape({\n  canEdit: canEditPropType,\n  canPrint: canPrintPropType,\n  canDownload: canDownloadPropType,\n  canSearch: canSearchPropType,\n  canRefreshRows: canRefreshRowsPropType,\n  canOrderColumns: canOrderColumnsPropType,\n  canSaveUserConfiguration: canSaveUserConfigurationPropType,\n  canSelectRow: canSelectRowPropType,\n  userConfiguration: userConfigurationPropType,\n  rowsPerPage: rowsPerPagePropType,\n  additionalIcons: additionalIconsPropType,\n  selectionIcons: selectionIconsPropType\n});\n\nexport const optionsPropType = PropTypes.shape({\n  title: titlePropType,\n  dimensions: dimensionsPropType,\n  keyColumn: keyColumnPropType.isRequired,\n  font: fontPropType,\n  data: dataPropType.isRequired,\n  features: featuresPropType\n});\n\nexport const CustomTableBodyRowPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.element\n]);\nexport const CustomTableBodyCellPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.element\n]);\nexport const CustomTableHeaderRowPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.element\n]);\nexport const CustomTableHeaderCellPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.element\n]);\nexport const componentPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.element\n]);\n\nexport const customDataTypePropType = PropTypes.shape({\n  dataType: dataTypePropType.isRequired,\n  component: componentPropType.isRequired\n});\n\nexport const customDataTypesPropType = PropTypes.arrayOf(\n  customDataTypePropType\n);\n\nexport const indexPropType = PropTypes.number;\n"],"mappings":"AAAA","sourceRoot":""}